{"ast":null,"code":"export function formatData(video) {\n  const clip = video[\"clip\"];\n  const largestImage = clip[\"pictures\"][\"sizes\"].length - 1; // I felt that re-writing the data in this object array format helped me reason more clearly when mapping\n  // and generally manipulating the data for rendering. \n\n  return {\n    name: clip.name,\n    description: clip.description,\n    uri: clip.uri,\n    videoID: clip.uri.slice(8),\n    created: clip.created_time,\n    featured: video.is_featured,\n    URLformat: \"https://vimeo.com/\" + video[\"clip\"].uri.slice(8),\n    language: clip.language,\n    duration: clip.duration,\n    plays: clip[\"stats\"].plays,\n    comments: clip[\"metadata\"][\"connections\"][\"comments\"].total,\n    user: clip[\"user\"].name,\n    userLink: clip[\"user\"].link,\n    pictures: clip[\"pictures\"][\"sizes\"][largestImage].link\n  };\n} // sorting logic\n\nexport function sort(results, sortType) {\n  if (sortType === \"Popularity\") {\n    results.sort((a, b) => {\n      return a.plays > b.plays ? -1 : 1; //had to use plays because # favorites was not provided in example data \n    });\n  }\n\n  if (sortType === \"TitleAZ\") {\n    results.sort((a, b) => {\n      return a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1;\n    });\n  }\n\n  if (sortType === \"TitleZA\") {\n    results.sort((a, b) => {\n      return a.name.toLowerCase() > b.name.toLowerCase() ? -1 : 1;\n    });\n  }\n\n  if (sortType === \"Longest\") {\n    results.sort((a, b) => {\n      return a.duration > b.duration ? -1 : 1;\n    });\n  }\n\n  if (sortType === \"Shortest\") {\n    results.sort((a, b) => {\n      return a.duration > b.duration ? 1 : -1;\n    });\n  }\n\n  if (sortType === \"Newest\") {\n    results.sort((a, b) => {\n      return a.created > b.created ? -1 : 1;\n    });\n  }\n\n  if (sortType === \"Oldest\") {\n    results.sort((a, b) => {\n      return a.created > b.created ? 1 : -1;\n    });\n  }\n\n  if (sortType === \"UserAZ\") {\n    results.sort((a, b) => {\n      return a.user.toLowerCase() > b.user.toLowerCase() ? 1 : -1;\n    });\n  }\n\n  if (sortType === \"UserZA\") {\n    results.sort((a, b) => {\n      return a.user.toLowerCase() > b.user.toLowerCase() ? -1 : 1;\n    });\n  }\n\n  return results;\n} // filtering logic \n\nconst filterDate = (currentResults, currentFilter) => {\n  const rightNow = Date.now();\n  const week = 7 * 86400000; //miliseconds in a day \n\n  const month = 30 * 86400000;\n  const year = 365 * 86400000;\n\n  if (currentFilter === \"anyDate\") {\n    return currentResults;\n  }\n\n  if (currentFilter === \"365\") {\n    return currentResults.filter(result => rightNow - Date.parse(result.created) < year);\n  }\n\n  if (currentFilter === \"30\") {\n    return currentResults.filter(result => rightNow - Date.parse(result.created) < month);\n  }\n\n  if (currentFilter === \"7\") {\n    return currentResults.filter(result => rightNow - Date.parse(result.created) < week);\n  }\n};\n\nexport function filterDuration(currentResults, currentFilter) {\n  if (currentFilter === \"anyDuration\") {\n    return currentResults;\n  }\n\n  if (currentFilter === \"short\") {\n    return currentResults.filter(result => result.duration < 240);\n  }\n\n  if (currentFilter === \"med\") {\n    return currentResults.filter(result => result.duration > 240 && result.duration < 600);\n  }\n\n  if (currentFilter === \"long\") {\n    return currentResults.filter(result => result.duration > 600);\n  }\n}\nexport function filterFeatured(currentResults, currentFilter) {\n  if (currentFilter === \"anyFeatured\") {\n    return currentResults;\n  }\n\n  if (currentFilter === \"featured\") {\n    return currentResults.filter(result => result.featured);\n  }\n}\nexport function filter(results, dateFilter, durationFilter, featuredFilter) {\n  return filterDate(filterFeatured(filterDuration(results, durationFilter), featuredFilter), dateFilter);\n}\nexport function formatTime(seconds) {\n  if (seconds <= 0 || isNaN(seconds)) return null;\n  const duration = new Date(null);\n  duration.setSeconds(seconds);\n  const result = duration.toISOString().substr(11, 8);\n  return seconds >= 3600 ? result : result.slice(3);\n}","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/SERP/src/functions.js"],"names":["formatData","video","clip","largestImage","length","name","description","uri","videoID","slice","created","created_time","featured","is_featured","URLformat","language","duration","plays","comments","total","user","userLink","link","pictures","sort","results","sortType","a","b","toLowerCase","filterDate","currentResults","currentFilter","rightNow","Date","now","week","month","year","filter","result","parse","filterDuration","filterFeatured","dateFilter","durationFilter","featuredFilter","formatTime","seconds","isNaN","setSeconds","toISOString","substr"],"mappings":"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","sourcesContent":["\nexport function formatData(video) {\n    const clip = video[\"clip\"] \n    const largestImage = clip[\"pictures\"][\"sizes\"].length - 1\n\n    // I felt that re-writing the data in this object array format helped me reason more clearly when mapping\n    // and generally manipulating the data for rendering. \n\n    return {\n        name: clip.name,\n        description: clip.description,\n        uri: clip.uri,\n        videoID: clip.uri.slice(8), \n        created: clip.created_time, \n        featured: video.is_featured,\n        URLformat: \"https://vimeo.com/\" + video[\"clip\"].uri.slice(8),\n        language: clip.language,\n        duration: clip.duration, \n        plays: clip[\"stats\"].plays,\n        comments: clip[\"metadata\"][\"connections\"][\"comments\"].total,\n        user: clip[\"user\"].name,\n        userLink: clip[\"user\"].link,\n        pictures: clip[\"pictures\"][\"sizes\"][largestImage].link\n    }\n}\n\n\n// sorting logic\n\nexport function sort(results, sortType) {\n\n    if(sortType === \"Popularity\"){\n        results.sort((a,b) => { \n            return (a.plays > b.plays) ? -1 : 1   //had to use plays because # favorites was not provided in example data \n        })\n    } \n    if(sortType === \"TitleAZ\"){\n        results.sort((a,b) => { \n            return (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : -1\n        })\n    } \n    if(sortType === \"TitleZA\"){\n        results.sort((a,b) => { \n            return (a.name.toLowerCase() > b.name.toLowerCase()) ? -1 : 1\n        })\n    } \n    if(sortType === \"Longest\"){\n        results.sort((a,b) => { \n            return (a.duration > b.duration) ? -1 : 1\n        })\n    } \n    if(sortType === \"Shortest\"){\n        results.sort((a,b) => { \n            return (a.duration > b.duration) ? 1 : -1\n        })\n    } \n    if(sortType === \"Newest\"){\n        results.sort((a,b) => { \n            return (a.created > b.created) ? -1 : 1\n        })\n    } \n    if(sortType === \"Oldest\"){\n        results.sort((a,b) => { \n            return (a.created > b.created) ? 1 : -1\n        })\n    } \n    if(sortType === \"UserAZ\"){\n        results.sort((a,b) => { \n            return (a.user.toLowerCase() > b.user.toLowerCase()) ? 1 : -1\n        })\n    } \n    if(sortType === \"UserZA\"){\n        results.sort((a,b) => { \n            return (a.user.toLowerCase() > b.user.toLowerCase()) ? -1 : 1\n        })\n    } \n    return results\n}\n\n// filtering logic \n\nconst filterDate = (currentResults, currentFilter) => {\n\n    const rightNow = Date.now()\n    const week = 7 * 86400000       //miliseconds in a day \n    const month = 30 * 86400000\n    const year = 365 * 86400000\n\n    if(currentFilter === \"anyDate\") {\n        return currentResults\n    }\n    if(currentFilter === \"365\") {\n        return currentResults.filter(result => rightNow - Date.parse(result.created) <  year)\n    }\n    if(currentFilter === \"30\") {\n       return currentResults.filter(result => rightNow - Date.parse(result.created) <  month)\n    }\n    if(currentFilter === \"7\") {\n      return currentResults.filter(result => rightNow - Date.parse(result.created) <  week)\n    }\n}\n\nexport function filterDuration(currentResults, currentFilter) {\n    \n    if (currentFilter === \"anyDuration\") {\n        return currentResults\n    }\n    if (currentFilter === \"short\") {\n        return currentResults.filter(result => result.duration < 240)\n    }\n    if (currentFilter === \"med\") {\n        return currentResults.filter(result => result.duration > 240 && result.duration < 600)\n    }\n    if (currentFilter === \"long\") {\n        return currentResults.filter(result => result.duration > 600)\n    }\n}\n\nexport function filterFeatured(currentResults, currentFilter){\n\n    if(currentFilter === \"anyFeatured\") {\n        return currentResults\n    } \n    if(currentFilter === \"featured\") {\n       return currentResults.filter(result => (result.featured))\n    }\n}\n\n\nexport function filter(results, dateFilter, durationFilter, featuredFilter){\n\n    return filterDate(filterFeatured(filterDuration(results, durationFilter), featuredFilter), dateFilter)\n\n}\n\nexport function formatTime (seconds) {\n    if(seconds <= 0 || isNaN(seconds)) return null\n    const duration = new Date(null)\n    duration.setSeconds(seconds)\n    const result = duration.toISOString().substr(11, 8)\n    return seconds >= 3600  ? result : result.slice(3)\n}"]},"metadata":{},"sourceType":"module"}