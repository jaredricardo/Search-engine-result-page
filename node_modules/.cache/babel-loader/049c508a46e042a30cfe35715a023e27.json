{"ast":null,"code":"export async function parse(response) {\n  const videoArr = [];\n  await response[\"data\"].forEach(video => {\n    const largestImage = clip[\"pictures\"][\"sizes\"].length - 1;\n    const clip = video[\"clip\"];\n    videoArr.push({\n      name: clip.name,\n      description: clip.description,\n      uri: clip.uri,\n      videoID: clip.uri.slice(8),\n      //this may be redundant as I already have the uri, but for ease of access and for unique map key, its here\n      created: clip.created_time,\n      isFeatured: video.is_featured,\n      URLformat: \"https://vimeo.com/\" + video[\"clip\"].uri.slice(8),\n      language: clip.language,\n      duration: clip.duration,\n      plays: clip.plays,\n      comments: clip[\"metadata\"][\"connections\"][\"comments\"].total,\n      user: clip[\"user\"].name,\n      userLink: clip[\"user\"].link,\n      pictures: clip[\"pictures\"][\"sizes\"][largestImage].link\n    });\n  });\n  return videoArr;\n} // queryBuilder = (param, filterOption, sortOption) => {\n// } \n\nexport function sort(response) {}\nexport function formatTime(seconds) {\n  const duration = new Date(null);\n  duration.setSeconds(seconds);\n  const result = duration.toISOString().substr(11, 8);\n  return seconds >= 3600 ? result : result.slice(3);\n}","map":{"version":3,"sources":["/Users/jaredricardo/Desktop/frontend/serp/src/functions.js"],"names":["parse","response","videoArr","forEach","video","largestImage","clip","length","push","name","description","uri","videoID","slice","created","created_time","isFeatured","is_featured","URLformat","language","duration","plays","comments","total","user","userLink","link","pictures","sort","formatTime","seconds","Date","setSeconds","result","toISOString","substr"],"mappings":"AAAA,OAAO,eAAeA,KAAf,CAAqBC,QAArB,EAA8B;AAEjC,QAAMC,QAAQ,GAAG,EAAjB;AAEA,QAAMD,QAAQ,CAAC,MAAD,CAAR,CAAiBE,OAAjB,CAA0BC,KAAD,IAAW;AAEtC,UAAMC,YAAY,GAAGC,IAAI,CAAC,UAAD,CAAJ,CAAiB,OAAjB,EAA0BC,MAA1B,GAAmC,CAAxD;AACA,UAAMD,IAAI,GAAGF,KAAK,CAAC,MAAD,CAAlB;AAEAF,IAAAA,QAAQ,CAACM,IAAT,CAAc;AACVC,MAAAA,IAAI,EAAEH,IAAI,CAACG,IADD;AAEVC,MAAAA,WAAW,EAAEJ,IAAI,CAACI,WAFR;AAGVC,MAAAA,GAAG,EAAEL,IAAI,CAACK,GAHA;AAIVC,MAAAA,OAAO,EAAEN,IAAI,CAACK,GAAL,CAASE,KAAT,CAAe,CAAf,CAJC;AAIkB;AAC5BC,MAAAA,OAAO,EAAER,IAAI,CAACS,YALJ;AAMVC,MAAAA,UAAU,EAAEZ,KAAK,CAACa,WANR;AAOVC,MAAAA,SAAS,EAAE,uBAAuBd,KAAK,CAAC,MAAD,CAAL,CAAcO,GAAd,CAAkBE,KAAlB,CAAwB,CAAxB,CAPxB;AAQVM,MAAAA,QAAQ,EAAEb,IAAI,CAACa,QARL;AASVC,MAAAA,QAAQ,EAAEd,IAAI,CAACc,QATL;AAUVC,MAAAA,KAAK,EAAEf,IAAI,CAACe,KAVF;AAWVC,MAAAA,QAAQ,EAAEhB,IAAI,CAAC,UAAD,CAAJ,CAAiB,aAAjB,EAAgC,UAAhC,EAA4CiB,KAX5C;AAYVC,MAAAA,IAAI,EAAElB,IAAI,CAAC,MAAD,CAAJ,CAAaG,IAZT;AAaVgB,MAAAA,QAAQ,EAAEnB,IAAI,CAAC,MAAD,CAAJ,CAAaoB,IAbb;AAcVC,MAAAA,QAAQ,EAAErB,IAAI,CAAC,UAAD,CAAJ,CAAiB,OAAjB,EAA0BD,YAA1B,EAAwCqB;AAdxC,KAAd;AAgBH,GArBK,CAAN;AAsBA,SAAOxB,QAAP;AACH,C,CAEG;AAEA;;AAEA,OAAO,SAAS0B,IAAT,CAAc3B,QAAd,EAAwB,CAE9B;AAED,OAAO,SAAS4B,UAAT,CAAqBC,OAArB,EAA8B;AACjC,QAAMV,QAAQ,GAAG,IAAIW,IAAJ,CAAS,IAAT,CAAjB;AACAX,EAAAA,QAAQ,CAACY,UAAT,CAAoBF,OAApB;AACA,QAAMG,MAAM,GAAGb,QAAQ,CAACc,WAAT,GAAuBC,MAAvB,CAA8B,EAA9B,EAAkC,CAAlC,CAAf;AACA,SAAOL,OAAO,IAAI,IAAX,GAAmBG,MAAnB,GAA4BA,MAAM,CAACpB,KAAP,CAAa,CAAb,CAAnC;AACH","sourcesContent":["export async function parse(response){\n\n    const videoArr = []\n\n    await response[\"data\"].forEach((video) => {\n        \n        const largestImage = clip[\"pictures\"][\"sizes\"].length - 1\n        const clip = video[\"clip\"] \n\n        videoArr.push({\n            name: clip.name,\n            description: clip.description,\n            uri: clip.uri,\n            videoID: clip.uri.slice(8), //this may be redundant as I already have the uri, but for ease of access and for unique map key, its here\n            created: clip.created_time,\n            isFeatured: video.is_featured,\n            URLformat: \"https://vimeo.com/\" + video[\"clip\"].uri.slice(8),\n            language: clip.language,\n            duration: clip.duration, \n            plays: clip.plays,\n            comments: clip[\"metadata\"][\"connections\"][\"comments\"].total,\n            user: clip[\"user\"].name,\n            userLink: clip[\"user\"].link,\n            pictures: clip[\"pictures\"][\"sizes\"][largestImage].link\n        })\n    })\n    return videoArr\n}   \n  \n    // queryBuilder = (param, filterOption, sortOption) => {\n\n    // } \n\n    export function sort(response) {\n\n    }\n\n    export function formatTime (seconds) {\n        const duration = new Date(null)\n        duration.setSeconds(seconds)\n        const result = duration.toISOString().substr(11, 8)\n        return seconds >= 3600  ? result : result.slice(3)\n    }"]},"metadata":{},"sourceType":"module"}